name: Build, test and deploy Ragger

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - develop
      - master

jobs:
  build_install_test:
    name: Build, install and test the library
    runs-on: ubuntu-latest
    steps:
    - name: Clone
      uses: actions/checkout@v2
    - name: Speculos dependencies
      run: sudo apt-get update && sudo apt-get install -y qemu-user-static
    - name: Build & install
      run: pip install --extra-index-url https://test.pypi.org/simple/ -U .[tests]
    - name: Gather boilerplate NanoS to run tests against
      uses: dawidd6/action-download-artifact@v2
      with:
        repo: LedgerHQ/app-boilerplate
        name: boilerplate-app-nanos
        workflow: ci-workflow.yml
        path: tests/elfs/
    - name: Renaming NanoS artifact
      run: mv tests/elfs/app.elf tests/elfs/nanos.elf
    - name: Gather boilerplate NanoX to run tests against
      uses: dawidd6/action-download-artifact@v2
      with:
        repo: LedgerHQ/app-boilerplate
        name: boilerplate-app-nanox
        workflow: ci-workflow.yml
        path: tests/elfs/
    - name: Renaming NanoS artifact
      run: mv tests/elfs/app.elf tests/elfs/nanox.elf
    - name: Gather boilerplate NanoS+ to run tests against
      uses: dawidd6/action-download-artifact@v2
      with:
        repo: LedgerHQ/app-boilerplate
        name: boilerplate-app-nanosp
        workflow: ci-workflow.yml
        path: tests/elfs/
    - name: Renaming NanoS artifact
      run: mv tests/elfs/app.elf tests/elfs/nanosp.elf
    - name: Check the downloaded files
      run: tree .
    - name: Run tests and generate coverage
      run: pytest tests/ --cov ragger --cov-report xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        name: codecov-ragger

  package_and_deploy:
    name: Build and deploy Ragger Python Package
    needs: [build_install_test]
    runs-on: ubuntu-latest
    steps:
    - name: Clone
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Get Ragger version
      id: version
      run: |
        echo "##[set-output name=version;]$(cat src/ragger/__init__.py  | grep __version__ | cut -d ' ' -f 3 | sed s/\"//g)";
        echo "Version registered: ${{ steps.version.outputs.version }}"
    - name: Build Ragger python package
      run: |
        pip install --upgrade pip build twine
        PIP_EXTRA_INDEX_URL=https://test.pypi.org/simple/ python -m build
        python -m twine check dist/*
    # TEST_PYPI_API_TOKEN is an API token created on
    # https://test.pypi.org/manage/account/#api-tokens with restriction to speculos project
    - name: Display publication requirements
      run:
        echo {{ github.event_name }}
        echo {{ github.ref }}
        echo {{ github.event.head_commit.message }}
    - name: Publish Python package to test.pypi.org
      if: success() && github.event_name == 'push' && github.ref == 'refs/heads/develop' && contains(github.event.head_commit.message, 'release')
      run: python -m twine upload --repository testpypi dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PUBLIC_API_TOKEN  }}
        TWINE_NON_INTERACTIVE: 1
    - name: Publish a release on the repo
      if: success() && github.event_name == 'push' && github.ref == 'refs/heads/develop' && contains(github.event.head_commit.message, 'release')
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        automatic_release_tag: "v${{ steps.version.outputs.version }}"
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: true
        files: |
          LICENSE
          dist/
